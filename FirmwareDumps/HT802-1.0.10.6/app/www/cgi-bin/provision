#!/bin/sh

. /app/web/check.sh
_session_id="`nvram get session_id`"
_session_token="`nvram get session_token`"
_timestamp="`nvram get timestamp`"
_scriptname="`basename ${SCRIPT_NAME}`"
_URL_session_token="`echo ${QUERY_STRING} | cut -d'=' -f2`"
_session_user="`nvram get session_user`"

check_lang

check_session_token()
{
    # Only POST with valid token can update the configuration
    if neq "${REQUEST_METHOD}" "POST" ||  empty "${_URL_session_token}" || neq "${_URL_session_token}" "${_session_token}" || check_session_token_time; then
        cat < "${1}" > /dev/null
        header
        if equal "admin" "${_session_user}"; then
            /app/bin/nvparse_weblocked /app/web/adminlogin.htm 2> /dev/null
        else
            /app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
        fi
        exit
    fi
    generate_session_token
}

if equal "locked" "${_session_user}"; then
    cat < "${1}" > /dev/null
    header
    /app/bin/nvparse_weblocked /app/web/loginlocked.htm 2> /dev/null
elif empty "${_session_id}" || neq "${_scriptname}" "upload_firmware" || neq "admin" "${_session_user}"; then
    cat < "${1}" > /dev/null
    nvram unset session_id
    nvram unset timestamp
    nvram unset session_user
    nvram unset previous_page
    header
    /app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
elif check_timestamp "${_timestamp}";then
    cat < "${1}" > /dev/null
    nvram unset session_id
    nvram unset timestamp
    nvram unset session_user
    nvram unset previous_page
    header
    /app/bin/nvparse_weblocked /app/web/loginout.htm 2> /dev/null
else 
    check_session_token
    # Bug 120848, get the correct FW filename
    devId="`cat /proc/gxp/dev_info/dev_id | tr '[A-Z]' '[a-z]'`"
    if [ "$devId" = "ht812" -o $devId = "ht814" ]; then
        fw_filename="ht81xfw.bin"
    else
        fw_filename="`cat /proc/gxp/dev_info/dev_id |tr '[A-Z]' '[a-z]' |tr -d '-'`fw.bin"
    fi

    nvram set :firmware_filename=${fw_filename}
    nvram set :local_provision_status=0
    nvram unset local_provision_status_string
    if [ -n "`ps | grep provision | grep -v grep | grep -v cgi`" ]; then
        nvram set :local_provision_status=1
        nvram set :local_provision_status_string="Device already has another provision running!"
        cat < "${1}" > /dev/null
        header
        /app/bin/nvparse_weblocked /app/web/local_provision_status.htm 2> /dev/null
        exit
    fi
    if [ -z $FILENAME -o "`nvram get local_provision_status`" = "1" ]; then
        cat < "${1}" > /dev/null
        header
        /app/bin/nvparse_weblocked /app/web/firmware_page.htm 2> /dev/null
    else
        FILENAME="$(echo "${FILENAME}"|tr '\\' '/')"
        FILE="$(basename "${FILENAME}")"
        if [ -z "`echo ${FILE} | grep ${FILENAME}$`" ]; then
            cat < "${1}" > /dev/null
            header
            /app/bin/nvparse_weblocked /app/web/firmware_page.htm 2> /dev/null
        else
            get_system_status
            header
            if [ -z "`nvram get cur_call_cnt`" -o "`nvram get cur_call_cnt`" = "0" ]; then
                /app/bin/nvparse_weblocked /app/web/pr_rs.htm 2> /dev/null
                cat < "${1}" > /tmp/${fw_filename}
                /sbin/prov_fw.sh -f file:///tmp/${fw_filename} > /dev/null 2>&1
                if [ $? -eq 0 ]; then
                    nvram set :local_provision_status=0
                    rm /tmp/${fw_filename}
                else
                    nvram set :local_provision_status=2
                    nvram set :local_provision_status_string="Your firmware file is invalid, please use correct firmware!"
                    rm /tmp/${fw_filename}
                fi
            else
                cat < "${1}" > /dev/null
                /app/bin/nvparse_weblocked /app/web/firmware_page.htm 2> /dev/null
            fi
        fi
    fi
fi
