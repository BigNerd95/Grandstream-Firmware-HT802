#!/usr/bin/haserl
<? 
. /app/web/check.sh
_session_id="`nvram get session_id`"
_session_token="`nvram get session_token`"
_session_user="`nvram get :session_user`"
_timestamp="`nvram get timestamp`"
_scriptname="`basename ${SCRIPT_NAME}`"
_last_attempt="`get_pvalue :last_attempt 0`"
_invalid_attempts="`get_pvalue :invalid_attempts 0`"
_access_attempts="`get_pvalue_conf 28117 5`"
_lockout="`get_pvalue_conf 1683 10`"
_present_page="`nvram get present_page`"

check_lang

check_session_token()
{
	# Just check POST request
	if equal "${REQUEST_METHOD}" "POST";then
		if neq "${_scriptname}" "index" && neq "${_scriptname}" "login";then
			if empty "${FORM_session_token}" || neq "${FORM_session_token}" "${_session_token}" || check_session_token_time;then
				header
				if equal "admin" "${_session_user}"; then
					/app/bin/nvparse_weblocked /app/web/adminlogin.htm 2> /dev/null
				else
					/app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
				fi
				exit
			fi
			generate_session_token
		fi
	else
		# For the following request, only POST is valid
		if equal "${_scriptname}" "rs" || equal "${_scriptname}" "unit_reset";then
			header
			if equal "admin" "${_session_user}"; then
				/app/bin/nvparse_weblocked /app/web/adminlogin.htm 2> /dev/null
			else
				/app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
			fi
			exit
		fi
	fi
}

# Check again whether should be locked
if equal "locked" "${_session_user}"; then
	if check_web_access_attempts "${_access_attempts}" "${_invalid_attempts}" ;then
		if ! check_web_lock_duration "${_lockout}" "${_last_attempt}"; then
			_session_user=""
			nvram unset :session_user
			nvram unset :invalid_attempts
		fi
	else
		_session_user=""
		nvram unset :session_user
	fi
fi

if equal "locked" "${_session_user}"; then
	header
	/app/bin/nvparse_weblocked /app/web/loginlocked.htm 2> /dev/null
# as long, there is session_id and timestamp, that means at least viewer has authorized. refer dologin
elif empty "${_session_id}" || neq "${FORM_session_id}" "${_session_id}" ; then
	header
	/app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
	nvram set :previous_page="${_scriptname}"
elif check_timestamp "${_timestamp}"; then
	header
	/app/bin/nvparse_weblocked /app/web/loginout.htm 2> /dev/null
	nvram set :previous_page="${_scriptname}"
elif equal "${_scriptname}" "unit_reset"; then
	check_session_token
	nvram unset session_id
	nvram unset previous_page
	nvram unset timestamp
	_lockKeypad="`nvram get 88`"
	_reset_lock="`nvram get :reset_lock`"
	header
	if neq "${_reset_lock}" "1" ; then
		if neq "${_lockKeypad}" "1" && equal "`nvram get session_user`" "user"; then
			if equal "${FORM_reset_type}" "1" ; then
				nvram reset_list 1 /etc/basic_pvalues
			fi
		elif equal "`nvram get session_user`" "admin"; then
			if equal "${FORM_reset_type}" "1" ; then
				nvram reset_list 1 /etc/basic_pvalues
			elif equal "${FORM_reset_type}" "0"; then
				nvram eraseall
				if [ -f /proc/gxp/dev_info/hw_features/dect -a "`cat /proc/gxp/dev_info/hw_features/dect`" = "1" ]; then
					flash_eraseall /dev/mtd9 >/dev/null 2>&1
					flash_eraseall /dev/mtd10 >/dev/null 2>&1
				fi
			elif equal "${FORM_reset_type}" "2" ; then
				nvram reset_list 2  /etc/basic_pvalues
			else
				/app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
				nvram unset session_user
				exit
			fi
		else
			/app/bin/nvparse_weblocked /app/web/adminlogin.htm 2> /dev/null
			nvram unset session_user
			exit
		fi
		/app/bin/nvparse_weblocked /app/web/rs.htm 2> /dev/null
		nvram commit
		reboot
	else
		/app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
		nvram unset session_user
		exit
	fi
# following 2 page only allow admin to access
elif [ equal "${_scriptname}" "firmware_page" || equal "${_scriptname}" "cfg_page" ] && neq "admin" "${_session_user}" ; then 
	header
	/app/bin/nvparse_weblocked /app/web/adminlogin.htm 2> /dev/null
	nvram set :previous_page="${_scriptname}"
# following page only allow admin to access
elif equal "${_scriptname}" "rs" && neq "config2" "${_present_page}" && neq "admin" "${_session_user}"; then 
	header
	/app/bin/nvparse_weblocked /app/web/adminlogin.htm 2> /dev/null
	nvram set :previous_page="${_scriptname}"
# following page only allow admin/user to access
elif equal "${_scriptname}" "rs" && equal "config2" "${_present_page}" && neq "admin" "${_session_user}" && neq "user" "${_session_user}"; then 
	header
	/app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
	nvram unset previous_page
else
	check_session_token
	if equal "${_scriptname}" "index"; then
		get_system_status
	fi
	if equal "${_scriptname}" "firmware_page"; then
		fw_filename="`cat /proc/gxp/dev_info/dev_id |tr '[A-Z]' '[a-z]' |tr -d '-'`fw.bin"
		nvram set :firmware_filename=${fw_filename}
	fi	
	header
	nvram set :timestamp="`date +%s`"
	nvram set :present_page="${_scriptname}"
	_reset_lock="`nvram get :reset_lock`"
	if equal "${_scriptname}" "rs" || equal "${_scriptname}" "login" ; then
		nvram unset session_id
		nvram unset session_user
		nvram unset previous_page
		nvram unset timestamp
		if equal "${_scriptname}" "rs" && neq "${_reset_lock}" "1"; then
			nvram commit
			i=1
			#wait for any calls or IVR instances
			while [ "${i}" -ge 1 ]
			do
				ATA_RUNNING="$(ps|grep gs_ata|grep -v grep)"
				if empty "${ATA_RUNNING}"; then
					break
				fi
				call_cnt="`nvram get cur_call_cnt`"
				if [ -z "${call_cnt}" -o "${call_cnt}" = "0" ]; then
					ivr_cnt="`nvram get cur_ivr_cnt`"
					if [ -z "${ivr_cnt}" -o "${ivr_cnt}" = "0" ]; then
						break
					fi
				fi
				i=$((${i}+1))
				if [ "`nvram get 208`" != "0" ]; then
					logger -p kern.info -t "`nvram get syslog_id`" "Waiting for ongoing calls to finish..."
				fi
				sleep 5
			done
			_reset_lock="`nvram get :reset_lock`"
			if neq "${_reset_lock}" "1"; then
				/app/bin/nvparse_weblocked /app/web/${_scriptname}.htm 2> /dev/null
				reboot
			else
				/app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
			fi
		else
			/app/bin/nvparse_weblocked /app/web/login.htm 2> /dev/null
		fi
	else
		/app/bin/nvparse_weblocked /app/web/${_scriptname}.htm 2> /dev/null
	fi
fi

?>
